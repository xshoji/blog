<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>posts on xshoji's tech blog</title><link>https://xshoji.github.io/blog/tags/posts/</link><description>Recent content in posts on xshoji's tech blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 27 Sep 2020 01:05:47 +0900</lastBuildDate><atom:link href="https://xshoji.github.io/blog/tags/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Markdown + Hugo + Github Actionで作る無料ブログサイト構築手順</title><link>https://xshoji.github.io/blog/posts/20200927_instructions-for-building-a-free-blog-site-with-markdown-hugo-github-action/</link><pubDate>Sun, 27 Sep 2020 01:05:47 +0900</pubDate><guid>https://xshoji.github.io/blog/posts/20200927_instructions-for-building-a-free-blog-site-with-markdown-hugo-github-action/</guid><description>準備中。
GitHub Actions による GitHub Pages への自動デプロイ - Qiita
https://qiita.com/peaceiris/items/d401f2e5724fdcb0759d
peaceiris/actions-hugo： GitHub Actions for Hugo ⚡️ Setup Hugo quickly and build your site fast. Hugo extended, Hugo Modules, Linux (Ubuntu), macOS, and Windows are supported.
https://github.com/peaceiris/actions-hugo
GitHubのSecretsを活用して、GitHub Actionsで安全に機密情報を扱う - Qiita
https://qiita.com/developer-kikikaikai/items/60b209c065f076dca7a1
GitHub Actions で別のリポジトリに git push する
https://3nan3.github.io/post/2019122201_github_actions/
逆引きUNIXコマンド/指定したタイムゾーンのローカルタイムを表示する方法・TZ - Linuxと過ごす
https://linux.just4fun.biz/?%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%BE%E3%83%BC%E3%83%B3%E3%81%AE%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95%E3%83%BBTZ</description></item><item><title>人を喜ばせるためのYESマンから脱却する方法</title><link>https://xshoji.github.io/blog/posts/20200927_how-to-get-out-of-the-yes-man-to-please-people/</link><pubDate>Sun, 27 Sep 2020 01:05:47 +0900</pubDate><guid>https://xshoji.github.io/blog/posts/20200927_how-to-get-out-of-the-yes-man-to-please-people/</guid><description>How To Say No： 5 Steps To Stop Being A People Pleaser ： Life Kit ： NPR
https://www.npr.org/2020/09/15/913207918/how-to-say-no-for-the-people-pleaser-who-always-says-yes
いつも「はい喜んで」と言ってしまう人必見の記事・・・かもしれない。
要約すると
他人を満足させるために、我慢してYESって言ってない？
それはあなたの大切な時間を浪費することに繋がってるよ
まずは1週間のうちNOと言えそうな依頼が本当にないのか見直してみよう
という話。自分も仕事がもらえなくなるの嫌なんで、割となんでもYESと言ってしまってるなーと、 結構心当たりのある指摘があり、耳が痛い。
When your top priority is to be liked all the time, you aren&amp;rsquo;t in touch with what you need.
あなたの最優先事項が「常に好かれること」であるとき、あなたが本来必要とする人と連絡を取れていないと言えます。
確かに、気をつけないと。
この記事のLueさん曰く、以下の方法で自分のことを分析し、断ることにチャンレジしてみてとのこと。
1週間の各要求と、その答えのイエス、ノー、または多分と言う回数を継続してメモする。 このメモを何かの判断に使わない。ただ見るだけ。（あんまNOって言ってないから次は断ろう、とかはするなの意） 要求に対してどう感じたのかに注目し、記録する。（この依頼嫌やったなー、この人苦手やなーとか） ノーと安心して言えそうな場面があったか探す。 次の週、ノーと断る回数を決めてそれを目指してみる。（達成できなくてもOK） また、「YES」と言いすぎてしまう時は、総じて自分が忙しすぎてちゃんと考えて返事できてないのでは？ということも指摘されていた。
そして、なんでこんなに人を喜ばせたくなっちゃうのか（ついYESと言ってしまうのか）については、
&amp;ldquo;People pleasing is a response to old hurts and loss,&amp;rdquo; she says.</description></item><item><title>スマホにおける広告の新しいターゲティング手法について</title><link>https://xshoji.github.io/blog/posts/20200926_new-targeting-techniques-for-ads/</link><pubDate>Sat, 26 Sep 2020 05:55:23 +0900</pubDate><guid>https://xshoji.github.io/blog/posts/20200926_new-targeting-techniques-for-ads/</guid><description>Companies can track your phone’s movements to target ads ｜ Ars Technica
https://arstechnica.com/information-technology/2020/09/companies-can-track-your-phones-movements-to-target-ads/
が元の記事。iOS14で適用される（※来年に延期になった）ユーザーのトラッキング機能のデフォルトオプトアウト （ユーザーに「あなたのこと追跡するけど、いいよね？」（はい／いいえ）みたいな許可を明示的に得ないと、デフォルトでトラッキングができなくなる）や、 Google Chromeのトラッキング用のクッキーの段階的な廃止など、個人のプロファイルに基づくトラッキングができなくなってきている。
iOS 14、iPadOS 14、watchOS 14、tvOS 14は9月16日にリリース ｜ TechCrunch Japan
https://jp.techcrunch.com/2020/09/16/2020-09-15-apple-ios-14-release/
Google による Cookie 廃止、「2年間」の猶予に歓迎の声 ：「実に穏やかなアプローチだ」 ｜ DIGIDAY［日本版］
https://digiday.jp/platforms/google-plans-kill-off-third-party-cookies-chrome-within-2-years/
それに対しての新しいアプローチってどんなものがある？という話。
この記事では、広告の新しいターゲティング方法として「ユーザーが何をしているか」を軸とした手法を提案、提供しているらしい。
NumberEight ｜ AI to power your content with context ｜ London, UK
https://www.numbereight.ai/
この記事に出てくる NumberEight という企業が提供しているSDKをアプリに組み込むことで、 スマホのセンサー情報に基づいたユーザーの行動を判別できるようになる、みたいなことやと思う。 ちなみに、この会社の共同設立者は
Abhishek Sen - Co-Founder &amp;amp; CEO - NumberEight ｜ LinkedIn</description></item><item><title>SQLインジェクションフィルタを回避するためのアプローチ</title><link>https://xshoji.github.io/blog/posts/20200920_an-approach-to-avoid-sql-injection-filters/</link><pubDate>Sun, 20 Sep 2020 19:00:00 +0900</pubDate><guid>https://xshoji.github.io/blog/posts/20200920_an-approach-to-avoid-sql-injection-filters/</guid><description>Astrocamel - Blog/Portfolio of George Skouroupathis
https://www.astrocamel.com/web/2020/09/04/how-i-bypassed-cloudflares-sql-injection-filter.html
が元の記事で、さらっとまとめると
Cloudflareを使ってるサイトの脆弱性試験しようとしたら、そもそもサイトまでリクエストが届いてないことが判明
CloudflareのWAFで弾かれてるっぽいから、SQLのリクエスト難読化したら無事突破できたよ
って話です。この機能を回避するアプローチが面白かった。 ここでいう「難読化（obfuscation）」っていうのは、 SQLの意味はそのままに、Cloudflareのフィルタをパスできるクエリの加工のことのようです。 （CDNのレイヤで、リクエストの中身まで見て攻撃を防ぐみたいなことしてるの知らなかった・・・。）
あと、目的のサイトの脆弱性試験しようとしたら、Cloudflareの脆弱性試験になってるやんっていう。
具体的な流れのサマリーは以下の通り。
脆弱性試験の対象サイトはMySQL + PHPのよくあるサイト POSTリクエストでTime-based SQL Injection使って試験しようとした 何故かリクエストがサイトに届かない CloudflareのWAF（SQLインジェクションフィルタ）で弾かれてるっぽい どういうリクエストが弾かれるか調べよう 文字とか=とかをPOSTすると弾かれるっぽい いろいろSQL難読化したら無事突破できました 無事突破したことをCloudflareに報告したらTシャツゲットしたよ みたいなことのようです。ここで出てくる「Time-based SQL Injection」ってのは、
Time-based SQL Injectionは意外に実用的だった ｜ 徳丸浩の日記
https://blog.tokumaru.org/2015/04/time-based-sql-injection.html
Time-based SQL Injectionとは&amp;hellip;
特定の条件にヒットする場合にのみ一定秒数Sleepする、というSQL（sleep()関数とかを使って）をInjectionすることで、 ヒットする場合としない場合の応答時間の差を利用して情報を盗む手法のこと。
らしいです。へー。 （後で気づいたけど、かの有名な徳丸さんのサイトだった）
あ、あと全部のSQLインジェクションが弾かれるわけではなかったみたいなのでそこは注意。
結局この人の場合、Time-based SQL Injectionという手法が使えなかったため、 その時に試すことができたSQLインジェクションを使って、
結果が返りうるSQLをインジェクション（例：... WHERE 'a' = 'a'）: 200 OK 結果が返らないSQLをインジェクション（例：... WHERE 'a' = 'b'）: 500 Internal Server Error となる特性を発見し、これを利用してテーブル名やカラム名の特定を行う方法を探っていったみたい。</description></item></channel></rss>